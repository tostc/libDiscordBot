name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}g
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        #compiler: [ g++-10 ]
        include:
          - os: ubuntu-latest
            compiler: g++-10
            target: Linux

          - os: windows-latest
            compiler: cl
            target: Windows

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        
    - name: Add msbuild to PATH
      if: ${{ matrix.os == 'windows-latest' }}
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=../publish

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Publish
      working-directory: ${{github.workspace}}
      run: cmake --install build
      
    - name: Pack
      working-directory: ${{github.workspace}}/publish
      run: cmake -E tar cJfv ../libDiscordBot-${{matrix.os}}.tar.gz .
     
    - name: Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{github.workspace}}/libDiscordBot-${{matrix.os}}.tar.gz
        asset_name: libDiscordBot-${{matrix.os}}.tar.gz
        tag: ${{ github.ref }}
      
